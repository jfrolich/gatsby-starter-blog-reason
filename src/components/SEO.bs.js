// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Gatsby from "gatsby";
import * as Belt_Array from "bs-platform/lib/es6/belt_Array.js";
import * as Belt_Option from "bs-platform/lib/es6/belt_Option.js";
import * as ReactHelmet from "react-helmet";

var Raw = {};

var query = (graphql`
  query SEO  {
    site  {
      siteMetadata  {
        title
        description
        author  {
          name
        }
      }
    }
  }
`);

function parse(value) {
  var value$1 = value.site;
  var tmp;
  if (value$1 == null) {
    tmp = undefined;
  } else {
    var value$2 = value$1.siteMetadata;
    var tmp$1;
    if (value$2 == null) {
      tmp$1 = undefined;
    } else {
      var value$3 = value$2.title;
      var value$4 = value$2.description;
      var value$5 = value$2.author;
      var tmp$2;
      if (value$5 == null) {
        tmp$2 = undefined;
      } else {
        var value$6 = value$5.name;
        tmp$2 = {
          name: !(value$6 == null) ? value$6 : undefined
        };
      }
      tmp$1 = {
        title: !(value$3 == null) ? value$3 : undefined,
        description: !(value$4 == null) ? value$4 : undefined,
        author: tmp$2
      };
    }
    tmp = {
      siteMetadata: tmp$1
    };
  }
  return {
          site: tmp
        };
}

function serialize(value) {
  var value$1 = value.site;
  var site;
  if (value$1 !== undefined) {
    var value$2 = value$1.siteMetadata;
    var siteMetadata;
    if (value$2 !== undefined) {
      var value$3 = value$2.author;
      var author;
      if (value$3 !== undefined) {
        var value$4 = value$3.name;
        var name = value$4 !== undefined ? value$4 : null;
        author = {
          name: name
        };
      } else {
        author = null;
      }
      var value$5 = value$2.description;
      var description = value$5 !== undefined ? value$5 : null;
      var value$6 = value$2.title;
      var title = value$6 !== undefined ? value$6 : null;
      siteMetadata = {
        title: title,
        description: description,
        author: author
      };
    } else {
      siteMetadata = null;
    }
    site = {
      siteMetadata: siteMetadata
    };
  } else {
    site = null;
  }
  return {
          site: site
        };
}

function serializeVariables(param) {
  
}

function makeVariables(param) {
  
}

function makeDefaultVariables(param) {
  
}

var Z__INTERNAL = {
  graphql_module: 0
};

function SEO(Props) {
  var description = Props.description;
  var langOpt = Props.lang;
  var passedMetaOpt = Props.meta;
  var title = Props.title;
  var lang = langOpt !== undefined ? langOpt : "en";
  var passedMeta = passedMetaOpt !== undefined ? passedMetaOpt : [];
  var site = parse(Gatsby.useStaticQuery(query)).site;
  var metaTitle;
  if (site !== undefined) {
    var match = site.siteMetadata;
    metaTitle = match !== undefined ? match.title : undefined;
  } else {
    metaTitle = undefined;
  }
  var author;
  if (site !== undefined) {
    var match$1 = site.siteMetadata;
    if (match$1 !== undefined) {
      var match$2 = match$1.author;
      author = match$2 !== undefined ? match$2.name : undefined;
    } else {
      author = undefined;
    }
  } else {
    author = undefined;
  }
  var metaDescription;
  if (description !== undefined) {
    metaDescription = description;
  } else if (site !== undefined) {
    var match$3 = site.siteMetadata;
    if (match$3 !== undefined) {
      var description$1 = match$3.description;
      metaDescription = description$1 !== undefined ? description$1 : undefined;
    } else {
      metaDescription = undefined;
    }
  } else {
    metaDescription = undefined;
  }
  return React.createElement(ReactHelmet.Helmet, {
              htmlAttributes: {
                lang: lang
              },
              titleTemplate: Belt_Option.getWithDefault(Belt_Option.map(metaTitle, (function (metaTitle) {
                          return "%s | " + metaTitle;
                        })), "%s"),
              title: title,
              meta: Belt_Array.keepMap([
                      Belt_Option.map(metaDescription, (function (description) {
                              return {
                                      property: "description",
                                      content: description
                                    };
                            })),
                      {
                        property: "og:title",
                        content: title
                      },
                      Belt_Option.map(description, (function (description) {
                              return {
                                      property: "og:description",
                                      content: description
                                    };
                            })),
                      {
                        property: "og:type",
                        content: "website"
                      },
                      {
                        name: "twitter:card",
                        content: "summary"
                      },
                      Belt_Option.map(author, (function (author) {
                              return {
                                      name: "twitter:creator",
                                      content: author
                                    };
                            })),
                      {
                        name: "twitter:title",
                        content: title
                      },
                      Belt_Option.map(description, (function (description) {
                              return {
                                      name: "twitter:description",
                                      content: description
                                    };
                            }))
                    ], (function (a) {
                        return a;
                      })).concat(passedMeta)
            });
}

var make = SEO;

var $$default = SEO;

export {
  Raw ,
  query ,
  parse ,
  serialize ,
  serializeVariables ,
  makeVariables ,
  makeDefaultVariables ,
  Z__INTERNAL ,
  make ,
  $$default ,
  $$default as default,
  
}
/* query Not a pure module */
